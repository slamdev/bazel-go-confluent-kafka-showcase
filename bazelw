#!/usr/bin/env sh

# https://github.com/bazelbuild/bazelisk/releases
BAZELISK_VERSION="v1.10.1"
BAZELISK_DIR=".bazel"

##############################################################################
##
##  Bazel start up script for UN*X (based on gradlew script from gradle wrapper project)
##
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

die () {
    echo
    echo "$*"
    echo
    exit 1
}

## Determine OS.
darwin=false
linux=false

case "`uname`" in
  Darwin* )
    darwin=true
    ;;
  Linux* )
    linux=true
    ;;
esac

BINARY_PATH=""
if $darwin; then
    BINARY_PATH=bazelisk-darwin-amd64
elif $linux; then
    BINARY_PATH=bazelisk-linux-amd64
else
   die "UNSUPPORTED OS! Command 'uname' says: `uname`. 'darwin' = $darwin and 'linux' = $linux"
fi

FULL_BINARY_PATH="$APP_HOME/${BAZELISK_DIR}/$BINARY_PATH"
if [ ! -f "$FULL_BINARY_PATH" ]; then
  BAZELISK_URL="https://github.com/bazelbuild/bazelisk/releases/download/${BAZELISK_VERSION}/${BINARY_PATH}"
  echo "Downloading ${BAZELISK_URL}"
  mkdir -p "$(dirname "$FULL_BINARY_PATH")"
  if command -v wget >/dev/null 2>&1; then
    wget -q -O "${FULL_BINARY_PATH}" "${BAZELISK_URL}"
  else
    curl -s -o "${FULL_BINARY_PATH}" -L "${BAZELISK_URL}"
  fi
  chmod +x "$FULL_BINARY_PATH"
fi

exec "$FULL_BINARY_PATH" "$@"
